---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: traefik-ingress-controller
  labels:
    app.kubernetes.io/component: load-balancer
    app.kubernetes.io/part-of: traefik-ingress-controller
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: load-balancer
  template:
    metadata:
      labels:
        app.kubernetes.io/component: load-balancer
        app.kubernetes.io/part-of: traefik-ingress-controller
    spec:
      tolerations:
        # these tolerations are to have the daemonset runnable on control plane nodes
        # remove them if your control plane nodes should not run pods
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
          effect: NoSchedule
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule
      containers:
        - name: traefik
          args:
            - --api.insecure=true
            - --accesslog=true
            - --api.dashboard=true
            - --entrypoints.web.address=:80/tcp
            - --entrypoints.websecure.address=:443/tcp
            - --providers.kubernetescrd.allowCrossNamespace=true
            - --serverstransport.insecureskipverify=true
            - --api.dashboard=true
            - --ping=true
            - --providers.http.tls.insecureskipverify=true
            ###- --certificatesresolvers.myresolver.acme.tlschallenge
            ###- --certificatesresolvers.myresolver.acme.email=jay.amorin@gmail.com
            ###- --certificatesresolvers.myresolver.acme.storage=acme.json
            # Please note that this is the staging Let's Encrypt server.
            # Once you get things working, you should remove that whole line altogether.
            ###- --certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
            - --log.level=DEBUG
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          ports:
            - name: web
              containerPort: 80
            - name: websecure
              containerPort: 443
            - name: admin
              containerPort: 8080
          securityContext:
            capabilities:
              drop:
              - ALL
              add:
              - NET_BIND_SERVICE

